digraph "Eigen::internal::noncopyable"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="Eigen::internal::noncopyable",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="Eigen::CholmodBase\l\< _MatrixType, _UpLo,\l CholmodDecomposition\l\< _MatrixType, _UpLo \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_cholmod_base.html"];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="Eigen::CholmodDecomposition\l\< _MatrixType, _UpLo \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_cholmod_decomposition.html",tooltip="A general Cholesky factorization and solver based on Cholmod. "];
  Node1 -> Node4 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="Eigen::CholmodBase\l\< _MatrixType, _UpLo,\l CholmodSimplicialLDLT\l\< _MatrixType, _UpLo \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_cholmod_base.html"];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="Eigen::CholmodSimplicial\lLDLT\< _MatrixType, _UpLo \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_cholmod_simplicial_l_d_l_t.html",tooltip="A simplicial direct Cholesky (LDLT) factorization and solver based on Cholmod. "];
  Node1 -> Node6 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="Eigen::CholmodBase\l\< _MatrixType, _UpLo,\l CholmodSimplicialLLT\l\< _MatrixType, _UpLo \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_cholmod_base.html"];
  Node6 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="Eigen::CholmodSimplicial\lLLT\< _MatrixType, _UpLo \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_cholmod_simplicial_l_l_t.html",tooltip="A simplicial direct Cholesky (LLT) factorization and solver based on Cholmod. "];
  Node1 -> Node8 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="Eigen::CholmodBase\l\< _MatrixType, _UpLo,\l CholmodSupernodalLLT\l\< _MatrixType, _UpLo \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_cholmod_base.html"];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="Eigen::CholmodSupernodal\lLLT\< _MatrixType, _UpLo \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_cholmod_supernodal_l_l_t.html",tooltip="A supernodal Cholesky (LLT) factorization and solver based on Cholmod. "];
  Node1 -> Node10 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="Eigen::CholmodBase\l\< _MatrixType, _UpLo,\l Derived \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_cholmod_base.html",tooltip="The base class for the direct Cholesky factorization of Cholmod. "];
  Node1 -> Node11 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="Eigen::IncompleteLUT\l\< _Scalar \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_incomplete_l_u_t.html",tooltip="Incomplete LU factorization with dual-threshold strategy. "];
  Node1 -> Node12 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="Eigen::IterativeSolverBase\l\< Derived \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_iterative_solver_base.html",tooltip="Base class for linear iterative solvers. "];
  Node1 -> Node13 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="Eigen::PastixBase\<\l Derived \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_pastix_base.html"];
  Node1 -> Node14 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="Eigen::SimplicialCholesky\lBase\< Derived \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_simplicial_cholesky_base.html",tooltip="A direct sparse Cholesky factorizations. "];
  Node1 -> Node15 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="Eigen::SuperLUBase\l\< _MatrixType, Derived \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_super_l_u_base.html",tooltip="The base class for the direct and incomplete LU factorization of SuperLU. "];
  Node1 -> Node16 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="Eigen::UmfPackLU\< \l_MatrixType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_umf_pack_l_u.html",tooltip="A sparse LU factorization and solver based on UmfPack. "];
  Node1 -> Node17 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="Eigen::IterativeSolverBase\l\< BiCGSTAB\< _MatrixType,\l _Preconditioner \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_iterative_solver_base.html"];
  Node17 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="Eigen::BiCGSTAB\< _Matrix\lType, _Preconditioner \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_bi_c_g_s_t_a_b.html",tooltip="A bi conjugate gradient stabilized solver for sparse square problems. "];
  Node1 -> Node19 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="Eigen::IterativeSolverBase\l\< ConjugateGradient\< _MatrixType,\l _UpLo, _Preconditioner \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_iterative_solver_base.html"];
  Node19 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="Eigen::ConjugateGradient\l\< _MatrixType, _UpLo, \l_Preconditioner \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_conjugate_gradient.html",tooltip="A conjugate gradient solver for sparse self-adjoint problems. "];
  Node1 -> Node21 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="Eigen::PastixBase\<\l PastixLDLT\< _MatrixType,\l _UpLo \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_pastix_base.html"];
  Node21 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="Eigen::PastixLDLT\<\l _MatrixType, _UpLo \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_pastix_l_d_l_t.html",tooltip="A sparse direct supernodal Cholesky (LLT) factorization and solver based on the PaStiX library..."];
  Node1 -> Node23 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="Eigen::PastixBase\<\l PastixLLT\< _MatrixType,\l _UpLo \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_pastix_base.html"];
  Node23 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="Eigen::PastixLLT\< \l_MatrixType, _UpLo \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_pastix_l_l_t.html",tooltip="A sparse direct supernodal Cholesky (LLT) factorization and solver based on the PaStiX library..."];
  Node1 -> Node25 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="Eigen::PastixBase\<\l PastixLU\< _MatrixType \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_pastix_base.html"];
  Node25 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="Eigen::PastixLU\< _Matrix\lType, IsStrSym \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_pastix_l_u.html",tooltip="Interface to the PaStix solver. "];
  Node1 -> Node27 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="Eigen::SimplicialCholesky\lBase\< SimplicialCholesky\l\< _MatrixType, _UpLo \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_simplicial_cholesky_base.html"];
  Node27 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="Eigen::SimplicialCholesky\l\< _MatrixType, _UpLo \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_simplicial_cholesky.html"];
  Node1 -> Node29 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="Eigen::SimplicialCholesky\lBase\< SimplicialLDLT\< \l_MatrixType, _UpLo \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_simplicial_cholesky_base.html"];
  Node29 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="Eigen::SimplicialLDLT\l\< _MatrixType, _UpLo \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_simplicial_l_d_l_t.html",tooltip="A direct sparse LDLT Cholesky factorizations without square root. "];
  Node1 -> Node31 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="Eigen::SimplicialCholesky\lBase\< SimplicialLLT\< _MatrixType,\l _UpLo \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_simplicial_cholesky_base.html"];
  Node31 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="Eigen::SimplicialLLT\l\< _MatrixType, _UpLo \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_simplicial_l_l_t.html",tooltip="A direct sparse LLT Cholesky factorizations. "];
  Node1 -> Node33 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="Eigen::SuperLUBase\l\< _MatrixType, SuperLU\l\< _MatrixType \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_super_l_u_base.html"];
  Node33 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="Eigen::SuperLU\< _MatrixType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_eigen_1_1_super_l_u.html",tooltip="A sparse direct LU factorization and solver based on the SuperLU library. "];
}
